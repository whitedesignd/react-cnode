{"version":3,"sources":["Context.js","redux/store.js","redux/reudcer.js","Components/header/header.js","router/router.js","View/login/Login.jsx","router/RouteLink.js","Components/backtop/Backtop.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","createStore","state","token","personal","action","temporary","type","window","localStorage","setItem","__REDUX_DEVTOOLS_EXTENSION__","connect","props","handClick","e","dispatch","render","id","className","to","src","navbarList","map","v","i","isToken","key","style","display","path","onClick","isOnclick","bind","name","length","Component","Index","lazy","API","About","Getstart","Details","User","Collections","Message","LazyCompoent","Com","fallback","this","component","exact","getItem","useDispatch","inputRef","useRef","maxLength","placeholder","defaultValue","ref","href","target","preventDefault","value","current","axios","post","accesstoken","then","r","res","data","history","push","catch","err","alert","RouteLink","getHtml","url","setData","a","get","d","html","document","createElement","innerHTML","contain","querySelector","outerHTML","router","match","Backtop","useState","isBottmn","setIsbottom","addEventListener","scrollingElement","scrollTop","scrollHeight","clientHeight","opacity","scrollTo","top","behavior","interceptors","request","use","config","Nprogress","start","error","Promise","reject","response","done","now","Date","timeInterval","time","last","nm","getMonth","lm","nd","getDate","ld","nh","getHours","lh","getFullYear","getMinutes","App","store","getState","Provider","Boolean","location","hostname","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.b22d74a2.chunk.js","sourcesContent":["import React from 'react';\r\nconst Context = React.createContext();\r\nexport default Context;","import { createStore } from 'redux';\r\nimport reudcer from './reudcer';\r\n\r\nexport default createStore(\r\n    reudcer,\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\r\n);","export default (state = {token:'',personal:{}} ,action) => { \r\n    const temporary = {...state};\r\n    switch (action.type) {\r\n        case 'SAVE_TOKEN':\r\n            if(temporary.token == ''){\r\n                temporary.token = action.token;\r\n                window.localStorage.setItem('accessToken',action.token);\r\n            }\r\n            return temporary;\r\n        case 'DELETE_TOKEN': \r\n            temporary.token = '';\r\n            return temporary;\r\n        case 'SAVE_PERSONAL': \r\n            temporary.personal = action.personal;\r\n            return temporary;\r\n        default:\r\n           return temporary;\r\n    }\r\n}","import React, { Component} from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './header.scss'\r\nimport { connect } from 'react-redux';\r\nconst mapState = (state) => {\r\n    return {\r\n        token: state.token \r\n    }\r\n}\r\nexport default connect(mapState)(class Head extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            navbarList: [\r\n                {\r\n                    path: '/',\r\n                    name: ' 首页',\r\n                    isToken: false,\r\n                },\r\n                {\r\n                    path: '/messages',\r\n                    name: \"未读消息\",\r\n                    isToken: true,\r\n                },\r\n                {\r\n                    path: '/getstart',\r\n                    name: ' 新手入门',\r\n                    isToken: false,\r\n                },\r\n                {\r\n                    path: '/api',\r\n                    name: ' API',\r\n                    isToken: false,\r\n                },\r\n                {\r\n                    path: '/about',\r\n                    name: '关于',\r\n                    isToken: false,\r\n                },\r\n                {\r\n                    path: '/login',\r\n                    name: props.token!=''?'退出':'登录',\r\n                    isToken: false,\r\n                    isOnclick: true,\r\n                }\r\n            ],\r\n            token: props.token,\r\n        }\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state){\r\n        if(props.token == ''){\r\n            state.navbarList[state.navbarList.length - 1].name = '登录';\r\n            return state;\r\n        }else{\r\n            state.navbarList[state.navbarList.length - 1].name = '退出';\r\n        }\r\n        return null;\r\n        \r\n    }\r\n    handClick = (e) => {\r\n        if(this.props.token!=''){\r\n            this.props.dispatch({type:'DELETE_TOKEN'});\r\n        }\r\n    }\r\n    render = () => (\r\n        <>\r\n            <div id=\"header\">\r\n                <div className=\"container\">\r\n                    <div className=\"pull-left\">\r\n                        <NavLink to='/'>\r\n                            <img src='//static2.cnodejs.org/public/images/cnodejs_light.svg' />\r\n                        </NavLink>\r\n                        <input type=\"text\" className='search-form' />\r\n                    </div>\r\n\r\n                    <div className=\"pull-right\">\r\n                        <ul>\r\n                            {\r\n                                this.state.navbarList.map((v, i) => {\r\n                                    if(v.isToken){\r\n                                        return <li key={i} style={{display:this.props.token?'':'none'}} >\r\n                                            <NavLink to={v.path} onClick={v.isOnclick?this.handClick.bind(this):null}>{v.name}</NavLink>\r\n                                        </li>\r\n                                    }\r\n                                    return <li key={i} >\r\n                                        <NavLink to={v.path} onClick={v.isOnclick?this.handClick.bind(this):null}>{v.name}</NavLink>\r\n                                    </li>\r\n                                })\r\n                            }\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n})","// import Index from '../View/Index';\r\n// import Getstart from '../View/Getstart';\r\n// import API from '../View/API';\r\n// import About from '../View/About';\r\n\r\nimport React,{Component,Suspense,lazy}from 'react';\r\nimport './Loding.scss'\r\nimport Login from '../View/login/Login';\r\nconst Index = lazy(()=>import('../View/Index'))\r\nconst API = lazy(()=>import('../View/API'))\r\nconst About = lazy(()=>import('../View/About'))\r\nconst Getstart = lazy(()=>import('../View/Getstart'));\r\nconst Details = lazy(()=> import ('../View/Details'));\r\nconst User = lazy(()=> import ('../View/user/User.jsx'))\r\nconst Collections = lazy(()=> import ('../View/collections/Collections.jsx'))\r\nconst Message = lazy(()=> import('../View/message/Message.jsx'));\r\n\r\nfunction LazyCompoent(Com) {\r\n    return class WrapperComponent extends Component {\r\n            render() {\r\n              return (\r\n                <Suspense fallback={\r\n                    <div className=\"spinner\">\r\n                        <div className=\"rect1\"></div>\r\n                        <div className=\"rect2\"></div>\r\n                        <div className=\"rect3\"></div>\r\n                        <div className=\"rect4\"></div>\r\n                        <div className=\"rect5\"></div>\r\n                    </div>}>\r\n                    <Com {...this.props}></Com>\r\n                </Suspense>\r\n            )}\r\n    }\r\n}\r\n\r\n    \r\nexport default [\r\n    {\r\n        path: '/index',\r\n        component: LazyCompoent(Index),\r\n        exact: false,\r\n    },\r\n    {\r\n        path: '/getstart',\r\n        component: LazyCompoent(Getstart),\r\n        exact: true,\r\n    },\r\n    {\r\n        path: '/api',\r\n        component: LazyCompoent(API),\r\n        exact: true,\r\n    },\r\n    {\r\n        path: '/about',\r\n        component: LazyCompoent(About),\r\n        exact: true,\r\n    },\r\n    {\r\n        path: '/topic/:id',\r\n        component: LazyCompoent(Details),\r\n        exact: true,\r\n    },\r\n    {\r\n        path: '/user/:name',\r\n        component: LazyCompoent(User),\r\n        exact: true,\r\n    },\r\n    {\r\n        path: '/user/:name/collections',\r\n        component: LazyCompoent(Collections),\r\n        exact: true,\r\n    },\r\n    {\r\n        path: '/messages',\r\n        component: LazyCompoent(Message),\r\n        exact: true,\r\n    },\r\n    {\r\n        path: '/login',\r\n        component: Login,\r\n        exact: true,\r\n    }\r\n]","import React, { useRef } from 'react';\r\nimport axios from 'axios';\r\nimport {useDispatch} from 'react-redux';\r\nimport './login.scss'\r\nexport default function Login(props) {\r\n    const token = window.localStorage.getItem('accessToken') || '';\r\n    const dispatch = useDispatch();\r\n    const inputRef = useRef();\r\n    const handClick = (e) => {\r\n        e.preventDefault();\r\n        let value = inputRef.current.value;\r\n        if(value == '') return;\r\n        axios.post('/v1/accesstoken',{accesstoken:value}).then(r => {\r\n            let {data:res} = r;\r\n            dispatch({ \r\n                type: 'SAVE_TOKEN',\r\n                token: value\r\n            })\r\n            dispatch({ \r\n                type: 'SAVE_PERSONAL',\r\n                personal: res\r\n            });\r\n            inputRef.current.value = '';\r\n            props.history.push('./idnex')\r\n        }).catch(err => {\r\n            inputRef.current.value = '';\r\n            return alert('错误的accesstoken');\r\n        })\r\n    }\r\n    return (\r\n        <div className='login'>\r\n            <input \r\n                type=\"text\" \r\n                maxLength=\"50\" \r\n                placeholder=\"Access Token\"\r\n                defaultValue={token}\r\n                ref={inputRef}\r\n            />\r\n            <div className=\"get-access-token\">\r\n                <a href=\"https://cnodejs.org/setting\" target=\"_blank\">如何获取Access Token？</a>\r\n            </div>\r\n\r\n            <div className=\"submit user-select-none\" onClick={handClick}>Sign in</div>\r\n        </div>\r\n    )\r\n};\r\n","import React from 'react';\r\nimport axios from 'axios'\r\nimport {Route,Switch,Redirect} from 'react-router-dom';\r\nimport router from './router'\r\nexport default function RouteLink(props) {\r\n    const getHtml = async (url,setData) =>axios.get(`/cnode${url}`).then(res=>{\r\n            let d = res.data;\r\n            let html = document.createElement('html');\r\n            html.innerHTML = d;\r\n            let contain = html.querySelector('#main #content').outerHTML;\r\n            setData(contain);\r\n    })\r\n    return (\r\n        <Switch>\r\n            {\r\n                router.map( (v,i) => {\r\n                    return <Route key={i} exact={v.exact} path={v.path} \r\n                                render={({match,history}) =>{\r\n                                    if(match){\r\n                                        return <>\r\n                                            <v.component  match={match}  getHtml={getHtml} history={history} />\r\n                                        </>\r\n                                    }\r\n                    }}></Route>\r\n                })\r\n            } \r\n            <Redirect to='/index/all' ></Redirect>\r\n           \r\n        </Switch>\r\n    )\r\n};\r\n","import React,{useState,useEffect} from 'react';\r\nimport './backtotop.scss';\r\nfunction Backtop() {\r\n    const [isBottmn,setIsbottom] = useState(false);\r\n    window.addEventListener(\"scroll\", () => {\r\n        let {\r\n          scrollTop,\r\n          scrollHeight,  \r\n          clientHeight\r\n        } = document.scrollingElement;\r\n        // 当前滚动高度 + 视口高度 >= 文档总高度\r\n        if (scrollTop + clientHeight >= scrollHeight*0.9) {\r\n            setIsbottom(true);\r\n        }\r\n        if (scrollTop + clientHeight <= scrollHeight*0.65) {\r\n            setIsbottom(false);\r\n        }\r\n    });\r\n    const goTop = (e) => {\r\n        e.preventDefault();\r\n        window.scrollTo({ \r\n            top: 0, \r\n            behavior: \"smooth\" \r\n        });\r\n        setIsbottom(false);\r\n    }\r\n    \r\n    return (\r\n        <div style={{opacity:isBottmn?1:0}} className='back-top' onClick={goTop}>\r\n            返回顶部\r\n        </div>\r\n    )\r\n}\r\nexport default Backtop;","import React from 'react';\nimport './App.scss';\nimport './View/content.scss'\nimport store from './redux/store'\nimport Head from './Components/header/header';\nimport RoutLink  from './router/RouteLink'\nimport Backtop from './Components/backtop/Backtop'\nimport {Provider} from 'react-redux';\nimport Context from './Context';\nimport axios from 'axios';\nimport Nprogress from 'nprogress';\nimport 'nprogress/nprogress.css';\n\n\naxios.interceptors.request.use(config => {\n    Nprogress.start();\n    return config;\n  },\n  error => {\n    return Promise.reject(error)\n  }\n)\naxios.interceptors.response.use(response => {\n    Nprogress.done(); // 设置加载进度条(结束..)\n    return response;\n  }, err => {\n    return Promise.reject(err);\n  }\n)\nconst now = new Date();\n// 计算时间间隔\nconst timeInterval = (time) => {\n  let last = new Date(time);\n  const nm = now.getMonth();\n  const lm = last.getMonth();\n\n  const nd = now.getDate();\n  const ld = last.getDate();\n\n  const nh = now.getHours();\n  const lh = last.getHours();\n\n  if (now.getFullYear() - last.getFullYear() >= 1) {\n      return `${now.getFullYear() - last.getFullYear()}年前`\n  } else {\n      if (nm - lm > 1) {\n          return `${nm - lm}个月前`\n      } else {\n          if (nm - lm == 1 && nd >= ld) {\n              return `1个月前`\n          }\n          if (nm - lm == 1 && ld > nd) {\n              return `${31 + nd - ld}天前`\n          }\n          if (nm == lm && nd > ld) {\n              return `${nd - ld}天前`\n          }\n          if (nm == lm && nd == ld) {\n              if (nh - lh >= 1) {\n                  return `${nh - lh}小时前`\n              } else {\n                  return `${now.getMinutes() - last.getMinutes()}分钟前`\n              }\n          }\n      }\n  }\n} \nfunction App() {\n  const isToken = store.getState().token != ''?true:false;\n  return (\n    <Context.Provider value={{now,timeInterval,isToken}}>\n      <Provider store={store}>\n        <div className=\"App\">\n          <Head></Head>\n          <div className=\"contain\">\n            <RoutLink ></RoutLink>\n          </div>\n          <Backtop></Backtop>\n        </div>\n      </Provider>\n    </Context.Provider>\n    \n    \n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {HashRouter} from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}